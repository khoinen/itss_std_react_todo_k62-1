[{"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/Input.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/Filter.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/TodoItem.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/lib/util.js":"9"},{"size":500,"mtime":1618160492702,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1618160492702,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1618160492702,"results":"13","hashOfConfig":"11"},{"size":1866,"mtime":1618163232089,"results":"14","hashOfConfig":"11"},{"size":825,"mtime":1618162058470,"results":"15","hashOfConfig":"11"},{"size":912,"mtime":1618162391503,"results":"16","hashOfConfig":"11"},{"size":610,"mtime":1618162552351,"results":"17","hashOfConfig":"11"},{"size":1000,"mtime":1618163422013,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1618160492702,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"hd70u5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/index.js",[],["42","43"],"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/Todo.js",["44"],"import React, { useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems, clearItems] = useStorage();\n  \n  const [filter, setFilter] = useState('ALL')\n\n  const itemsFilter = items.filter(item => {\n    if (filter === 'ALL') return true\n    if (filter === 'NOTDONE') return !item.done\n    if (filter === 'DONE') return item.done\n  })\n  \n  const changeTodoStatusHandler = (key) => {\n    const newItems = items.map(item => {\n      return item.key === key ? {...item, done: !item.done} : item\n    })\n    putItems(newItems)\n  }\n  \n  const addTodoItemHandler = (newTodo) => {\n    putItems([...items, { key: getKey(), text: newTodo, done: false}])\n  }\n  \n  const changeFilterHandler = (value) => {\n    setFilter(value)\n  }\n  \n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n      <Input onAddItem={addTodoItemHandler}/>\n      <Filter onChange={changeFilterHandler} value={filter}/>\n      {itemsFilter.map(item => (\n        <TodoItem \n          key={item.key} \n          item={item}\n          onTodoItemClick = {changeTodoStatusHandler}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {itemsFilter.length} items\n      </div>\n      <div className='panel-block'>\n        <button className='button is-fullwidth is-light' onClick={clearItems}>全てのTodoを削除</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/Input.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/Filter.js",["45","46","47"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n\n  const clickHandler = (key, e) => {\n    e.preventDefault()\n    onChange(key)\n  }\n\n  return (\n    <div className=\"panel-tabs\">\n      <a \n        href='#'\n        className={value === 'ALL' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'ALL')}\n      >全部</a>\n      <a \n        href='#'\n        className={value === 'NOTDONE' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'NOTDONE')}\n      >未完成</a>\n      <a \n        href='#'\n        className={value === 'DONE' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'DONE')}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62-1/src/hooks/storage.js",["48"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\n/*global localStorage*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    const data = localStorage.getItem(STORAGE_KEY) \n    if (data) {\n      setItems(JSON.parse(data))\n    } else {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([]))\n    }\n  }, []);\n\n  const putItems = items => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items))\n    setItems(items)\n  };\n\n  const clearItems = () => {\n    localStorage.setItem(STORAGE_KEY,JSON.stringify([]))\n    setItems([])\n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","/home/ec2-user/environment/itss_std_react_todo_k62-1/src/lib/util.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":26,"column":41,"nodeType":"55","messageId":"56","endLine":26,"endColumn":43},{"ruleId":"57","severity":1,"message":"58","line":16,"column":7,"nodeType":"59","endLine":20,"endColumn":8},{"ruleId":"57","severity":1,"message":"58","line":21,"column":7,"nodeType":"59","endLine":25,"endColumn":8},{"ruleId":"57","severity":1,"message":"58","line":26,"column":7,"nodeType":"59","endLine":30,"endColumn":8},{"ruleId":"60","severity":1,"message":"61","line":12,"column":10,"nodeType":"62","messageId":"63","endLine":12,"endColumn":22},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'localStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","no-global-assign","no-unsafe-negation"]